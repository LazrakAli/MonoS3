
Exercice 1:

Q.1)
"""Bash"""

#!/bin/bash

trap "" SIGINT
while true; do
    echo "il ne doit en rester qu'un"
    sleep 1
done 



""""""""""""""
Q.2)
- Pour l arreter on peut faire un SIGKILL dans un autre terminal.
Il faut alors recuperer le pid du highlander avec un ps actuel et lancer la commande.


Q.3)
Dans le script highlander2.sh j ai créé une liste de tous les signaux
1. avec une liste de nom de signaux
2. ensuit je les trap 1 par 1
    Cela permet de résister à tous les signaux mise à part SIGKILL et SIGSTOP qui ne peuvent etre ni ignoré/bloqué.

"""bash"""
#!/bin/bash


for s in $(kill -l | tr -s '\t' '\n' | cut -d')' -f2 | tr -d ' '); do 
    trap 'Nop' $s 
done 

while true; do
    echo "il ne doit en rester qu'un"
    sleep 1
done

""""""

Execice 2:


Q.1) dd if=/dev/urandom of=/tmp/iss bs=1b count=5000000
 


- if : fichier en entrée = /dev/urandom
- of : fichier de sortie = /tmp/iss
- bs : taille des blocks copié/collé = 1b (fini avec un b donc 1 * 512)
- count : nombre de octet copié = 5000000

affiche :
```bash
5000000+0 records in
5000000+0 records out
2560000000 bytes transferred in 34.057419 secs (75167176 bytes/sec)
```

Soit le nombre de blocks en entrée et sortie demandé
et le nombre de bytes transféré (count * bs = 5000000 * 512 = 256 * 10^7) avec le temps pris pour le transfert

Q.2) 
affiche :

```bash 
903602+0 records in
903602+0 records out
462644224 bytes (463 MB, 441 MiB) copied, 7.85424 s, 58.9 MB/s
1611774+0 records in
1611774+0 records out
825228288 bytes (825 MB, 787 MiB) copied, 13.9391 s, 59.2 MB/s
1993747+0 records in
1993747+0 records out
1020798464 bytes (1.0 GB, 974 MiB) copied, 17.2963 s, 59.0 MB/s
2497055+0 records in
2497055+0 records out
1278492160 bytes (1.3 GB, 1.2 GiB) copied, 21.7155 s, 58.9 MB/s
3760372+0 records in
3760372+0 records out
1925310464 bytes (1.9 GB, 1.8 GiB) copied, 32.9508 s, 58.4 MB/s
^C4884631+0 records in
4884631+0 records out
2500931072 bytes (2.5 GB, 2.3 GiB) copied, 42.7237 s, 58.5 MB/s
```

a chaque envoie de SIGUSR1 affiche le nombres d octet lue et ecrit

Q.3)
''' bash

#!/bin/bash

dd if=/dev/urandom of=/tmp/iss bs=1b count=5000000 &
pid=$(pgrep -n dd)
sleep 1
kill -SIGUSR1 $pid
wait $pid
rm -f /tmp/iss

'''


Exercice 3:

Q.1)
'''bash

#!/bin/bash

if [ $# -lt 1 ] || [ $1 -lt 0 ] ; then
        echo "Usage : $0 <positive_number>"
        exit -1
fi

if [ $1 -gt 0 ]; then
        printf "Ola :%-$1s0\n" " "
        ./$0 $(($1 - 1))
fi

'''

Q.2)